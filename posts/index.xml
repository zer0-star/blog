<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on zer0-star&#39;s blog</title>
    <link>https://zer0-star.github.io/blog/posts/</link>
    <description>Recent content in Posts on zer0-star&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Aug 2021 00:31:26 +0900</lastBuildDate><atom:link href="https://zer0-star.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>First-Class Patterns を自作言語に導入したい話</title>
      <link>https://zer0-star.github.io/blog/posts/fcp_in_ramune/</link>
      <pubDate>Thu, 26 Aug 2021 00:31:26 +0900</pubDate>
      
      <guid>https://zer0-star.github.io/blog/posts/fcp_in_ramune/</guid>
      <description>Ramune という言語を作ろうとしているんですが、そこに First-Class Patterns を導入することを妄想しているので、それについて書きます
まだ妄想でしかないので、よく分からないようなことを口走っていると思います（すみません！）
First-Class Patterns については、こういうの（slideshare）とかこういうの（hackage）とか見るといいかもしれない
first-class patterns の入った言語作りてー
&amp;mdash; zer0-star (@0x_zer0star) February 19, 2021  こんな気の抜けたことも言っています（アホなので）
Pattern as Function 要は、パターンというのは関数a -&amp;gt; Maybe bとみなせて、関数を適用してJustならマッチ成功、Nothingなら失敗とすればパターンマッチが実現できますよね、ということ 先ほど挙げた hackage のやつでは、マッチした結果を右辺の関数に渡すことで束縛の代用とされているが、Ramune では First-Class Patterns をネイティブにサポートして、レコード型（Haskell のようにデータ型の一部ではなく、PureScript のように単体で存在するもの）を介して識別子を束縛したい（{ x :: Int }が返ってきたらxがInt型の値に束縛されるように）
パターンの型は Haskell 風に書くとnewtype Pattern a r = Pattern { runPattern :: a -&amp;gt; Maybe r }（rはレコード型）と定義できる。例えば、座標平面上の点を受け取ってx座標をxに、y座標をyに束縛するパターンpointは、疑似 Haskell でpoint = Pattern $ \(x, y) -&amp;gt; Just { x = x, y = y }と書ける。このときpointはPattern (a, b) { x :: a, y :: b }というような型を持つ値になるだろう。</description>
    </item>
    
    <item>
      <title>くBC012 参戦記</title>
      <link>https://zer0-star.github.io/blog/posts/ku_b_c_012/</link>
      <pubDate>Fri, 12 Feb 2021 01:27:56 +0900</pubDate>
      
      <guid>https://zer0-star.github.io/blog/posts/ku_b_c_012/</guid>
      <description>開始20秒くらい HackerRank がバグってて焦った
A問題  呼ばれて返事をしている臓器ってなーんだ？
 返事といえば「はい」で、肺なのではい
B問題  一流のものさしってなーんだ？
 普通に難しくない？F より難しい気がしなくもない。&amp;ldquo;ものさし 類語&amp;rdquo; でググり、&amp;ldquo;メジャー&amp;rdquo; を得た。そういえば「メジャー」には「一流」という意味もあった気がするので、めじゃー
C問題  どちらか一方を選ぶ首都ってなーんだ？
 めちゃくちゃ難しかった。Wikipedia の首都の一覧のページを眺めたが、全然わからず。答はもしくわ（モスクワ、もしくは）らしい
D問題  気体でありすぎている神の使いってなーんだ？
 これも難しかったが、良問だと思う（答がわかったときにとても興奮した）。 Wikipedia の神使のページを眺めていたら、&amp;ldquo;八咫烏&amp;rdquo; というワードを発見した。なんとなく言葉の響きが &amp;ldquo;ガス&amp;rdquo; に似ていたのでちょっと考えてみたところ、&amp;ldquo;やたがらす&amp;rdquo; は &amp;ldquo;やたらがす&amp;rdquo; （やたらガス）に並び替えられることに気付いた。あまりにも焦ってしまい答の入力に手間取った。答はやたらがす
E問題  狭いけど凄い人ってなーんだ？
 これは本当に難しい。なろう系関連のワードを入れてみてもだめそうだったので、&amp;ldquo;狭い 類語&amp;rdquo; &amp;ldquo;凄い 類語&amp;rdquo; などでググっていた。最終的には &amp;ldquo;狭い 英語&amp;rdquo; でググりだし、このページにたどり着く。下の方に以下の記述があるのを発見:
 tight
「ピンと張っている」 「しっかり固定されている」 という意味合いですが、
スラングとして cool と同様、 「すごくかっこいい」 といった意味合いで用いられます。
また、tight には 「ケチ（財布のヒモがきつい）野郎」 という意味もあります。
 終了まで1分くらいだったこともあり、めちゃくちゃ焦っていたため「tight&amp;hellip;&amp;hellip;『狭い』『凄い』の2つの意味があるな、これだ！！！」と思い提出して AC を得たのだが、冷静に考えてくそなぞなぞコンテストに英語に2つの意味があるやつを出題するはずがないし、運が良かったと言わざるを得ない。実際の答は tight と泰斗（凄い人という意味らしい）とをかけてたいとらしい（泰斗という言葉は知らなかった）
F問題  晩ごはんを心待ちにする軍隊ってなーんだ？</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://zer0-star.github.io/blog/posts/my-first-post/</link>
      <pubDate>Wed, 02 Dec 2020 23:38:42 +0900</pubDate>
      
      <guid>https://zer0-star.github.io/blog/posts/my-first-post/</guid>
      <description>とりあえずブログができました。
test test
test
test
Union-Find algorithm: amortized \(O(\alpha(n))\) time
  zer0-star   $$ \sin(\theta) = \cos\left(\frac{\pi}{2} - \theta\right) $$
$$ \begin{aligned} \sum_{k=0}^\infty \frac{1}{2^k} &amp;amp; = \frac{1}{1 - \frac{1}{2}} \\ &amp;amp; = 2 \end{aligned} $$
import strutils, strformat for s in stdin.readLine().split(): echo fmt&amp;#34;Hello, {s}!&amp;#34; main = do n &amp;lt;- readLn @Int replicateM_ n $ putStrLn &amp;#34;Hello!&amp;#34; \(\vec{a} = (3, 4)\) のとき \(|\vec{a}| = \sqrt{3^2 + 4^2} = 5\)</description>
    </item>
    
  </channel>
</rss>
